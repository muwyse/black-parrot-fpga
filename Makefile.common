# SPDX-License-Identifier: BSD-3-Clause
#
# Makefile.common
#
# Define common paths and variables
#

TOP ?= $(shell git rev-parse --show-toplevel)

export BASE_DIR               := $(abspath $(TOP))

export BASE_SRC_DIR           := $(BASE_DIR)/src

export SCRIPT_DIR             := $(BASE_DIR)/script
export BUILD_IP_TCL           := $(SCRIPT_DIR)/build_ip.tcl
export GENERATE_BITSTREAM_TCL := $(SCRIPT_DIR)/generate_bitstream.tcl
export PARSE_FLIST_TCL        := $(SCRIPT_DIR)/parse_flist.tcl
export PROGRAM_FPGA_TCL       := $(SCRIPT_DIR)/program_fpga.tcl

export MAKE_DIR               := $(BASE_DIR)/mk

export PI_DIR                 := $(BASE_DIR)/pi

export VIVADO_VERSION         ?= 2019.1
export XILINX_VIVADO          ?= /gro/cad/Xilinx/Vivado/$(VIVADO_VERSION)
export VIVADO_BOARD_DIR       := $(abspath $(BASE_DIR)/../XilinxBoardStore)
vivado_bin                    := $(XILINX_VIVADO)/bin/vivado

export BLACKPARROT_DIR       := $(abspath $(BASE_DIR)/../black-parrot)
export BLACKPARROT_SUB_DIR   := $(abspath $(BASE_DIR)/../black-parrot-subsystems)
export BP_SDK_DIR            := $(abspath $(BASE_DIR)/../black-parrot-sdk)
export BP_TOOLS_DIR          := $(abspath $(BASE_DIR)/../black-parrot-tools)
export ZYNQPARROT_DIR        := $(abspath $(BASE_DIR)/../zynq-parrot)

export BASEJUMP_STL_DIR   := $(BLACKPARROT_DIR)/external/basejump_stl
export HARDFLOAT_DIR      := $(BLACKPARROT_DIR)/external/HardFloat
export BP_COMMON_DIR      := $(BLACKPARROT_DIR)/bp_common
export BP_TOP_DIR         := $(BLACKPARROT_DIR)/bp_top
export BP_FE_DIR          := $(BLACKPARROT_DIR)/bp_fe
export BP_BE_DIR          := $(BLACKPARROT_DIR)/bp_be
export BP_ME_DIR          := $(BLACKPARROT_DIR)/bp_me
export BP_RTL_INSTALL_DIR := $(BLACKPARROT_DIR)/install
export BP_RTL_BIN_DIR     := $(BP_RTL_INSTALL_DIR)/bin
export BP_RTL_LIB_DIR     := $(BP_RTL_INSTALL_DIR)/lib
export BP_RTL_INCLUDE_DIR := $(BP_RTL_INSTALL_DIR)/include

%.mem: %.riscv
	$(RISCV_OBJCOPY) -O verilog $< $@
	sed -i "s/@8/@0/g" $@

%.dump: %.riscv
	$(RISCV_OBJDUMP) -D -t $< > $@

NBF2MEM ?= $(BLACKPARROT_DIR)/bp_common/software/py/nbf.py

NBF_NCPUS ?= 1
NBF_UCODE ?= 0
NBF_UCODE_MEM ?= $(BP_SDK_DIR)/bedrock/roms/moesif.mem
NBF_SKIP_ZEROS ?= 0
NBF_MEM_SIZE ?= 64
NBF_BOOT_PC ?= 0x80000000

NBF_INPUTS ?= --config --ncpus $(NBF_NCPUS) --mem_size=$(NBF_MEM_SIZE) --boot_pc=$(NBF_BOOT_PC)
ifeq ($(NBF_UCODE),1)
NBF_INPUTS += --ucode $(NBF_UCODE_MEM)
endif
ifeq ($(NBF_SKIP_ZEROS),1)
NBF_INPUTS += --skip_zeros
endif
NBF_INPUTS += --mem

%.nbf: %.mem
	python $(NBF2MEM) $(NBF_INPUTS) $< > $@

