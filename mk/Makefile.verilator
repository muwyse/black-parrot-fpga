# SPDX-License-Identifier: BSD-3-Clause
#
# Makefile.verilator
#
# Include this file for verilator-related variables and commands.
# It sets LINT_OPTS, VV_OPTS to defaults if not already defined.
#
# Requires the following defined in the including Makefile:
# VERILATOR (usually from black-parrot-tools/Makefile.common)
# BASE_DIR (usually from Makefile.common)
# from test Makefile:
# LINT_DIR
# LINT_FLIST
# LINT_CONFIG
# LINT_LOG
# LINT_TOP
# VV_TOP (defaults to testbench)
# VV_FLIST
# VV_CONFIG
# HDL_PARAMS (optional, for -pvalue directives)
# HDL_DEFINES (optional, for +define+ directives)
#
# Also requires rules defined for $(LINT_FLIST) and $(LINT_CONFIG), if they need to be
# built dynamically.

export VV_CONFIG_BASE := $(BASE_DIR)/lint_settings.verilator

## Tools
CC ?= $(GCC)
VV ?= $(VERILATOR)

###############
### Linting ###
###############

LINT_DEFAULT_OPTS = --lint-only -Wall -Wno-unoptflat -Wno-timescalemod
LINT_DEFAULT_OPTS += --top-module $(LINT_TOP)
LINT_DEFAULT_OPTS += -f $(LINT_FLIST)
LINT_DEFAULT_OPTS += $(LINT_CONFIG)

LINT_OPTS         ?= $(LINT_DEFAULT_OPTS)

$(LINT_CONFIG): | $(LINT_DIR)
lint_config: $(LINT_CONFIG)

$(LINT_FLIST): | $(LINT_DIR)
lint_flist: $(LINT_FLIST)

lint: $(LINT_FLIST) $(LINT_CONFIG) | $(LINT_DIR)
	cd $(LINT_DIR); $(VV) $(LINT_OPTS) $(HDL_PARAMS) $(HDL_DEFINES) 2>&1 | tee -i $(LINT_LOG)

clean_lint:
	rm -rf $(LINT_DIR)

################
### Building ###
################

BUILD_BIN = $(BUILD_DIR)/simsc

VV_TOP ?= testbench
# Max number of threads to run verilated model with
# TODO: untested beyond 1
VV_THREADS ?= 1
## Tool options
VV_DEFAULT_OPTS  = --cc                 # Output in C++
#VV_DEFAULT_OPTS += --debug --gdbbt     # Debugs and produces stack trace
VV_DEFAULT_OPTS += -O1
VV_DEFAULT_OPTS += --x-assign fast --x-initial fast
VV_DEFAULT_OPTS += --threads $(VV_THREADS)
VV_DEFAULT_OPTS += --top-module $(VV_TOP)
VV_DEFAULT_OPTS += -f $(VV_FLIST)
VV_DEFAULT_OPTS += $(VV_CONFIG)
VV_DEFAULT_OPTS += --build --exe
VV_DEFAULT_OPTS += -o simsc
VV_DEFAULT_OPTS += -Wno-timescalemod
VV_DEFAULT_OPTS += --assert

VV_OPTS ?= $(VV_DEFAULT_OPTS)

BUILD_DEFAULT_OPTS  = --Wno-fatal --Wno-lint --Wno-style --Wno-widthconcat --Wno-unoptflat
BUILD_DEFAULT_OPTS += -CFLAGS -std=c++14
#BUILD_DEFAULT_OPTS += -CFLAGS "-I$(BP_TOOLS_DIR)/dromajo/include"
BUILD_DEFAULT_OPTS += -CFLAGS "-I$(BP_RTL_INSTALL_DIR)/include"
BUILD_DEFAULT_OPTS += -CFLAGS "-I$(BASEJUMP_STL_DIR)/bsg_test/"
BUILD_DEFAULT_OPTS += -LDFLAGS "-lpthread"
BUILD_DEFAULT_OPTS += -LDFLAGS "-L$(BP_RTL_INSTALL_DIR)/lib -ldramsim3 -Wl,-rpath=$(BP_RTL_INSTALL_DIR)/lib"
#BUILD_DEFAULT_OPTS += -LDFLAGS "-L$(BP_RTL_INSTALL_DIR)/lib -ldromajo_cosim -Wl,-rpath=$(BP_RTL_INSTALL_DIR)/lib"

BUILD_OPTS ?= $(BUILD_DEFAULT_OPTS)

$(VV_CONFIG): | $(BUILD_DIR)
build_config: $(VV_CONFIG)

$(VV_FLIST): | $(BUILD_DIR)
build_flist: $(VV_FLIST)

build: $(VV_FLIST) $(VV_CONFIG) | $(BUILD_DIR)
	cd $(BUILD_DIR); $(VV) $(VV_OPTS) $(BUILD_OPTS) $(HDL_PARAMS) $(HDL_DEFINES) 2>&1 | tee -i $(BUILD_LOG)

build_dump: VV_OPTS += --trace-fst
build_dump: VV_OPTS += --trace-structs
build_dump: VV_OPTS += --trace-depth 15
build_dump: build

clean_build:
	rm -rf $(BUILD_DIR)

##################
### Simulation ###
##################

VERILATOR_OPTIONS =

VERILATOR_PLUSARGS =

PROG_NBF ?= prog.nbf

sim: build
sim: $(SIM_DIR)/run_simsc
$(SIM_DIR)/run_simsc: | $(SIM_DIR)
	cp $(TEST_DIR)/$(PROG_NBF) $(SIM_DIR)/$(PROG_NBF)
	cp $(BUILD_DIR)/obj_dir/simsc $(SIM_DIR)/
	cd $(@D); ./simsc $(VERILATOR_OPTIONS) $(VERILATOR_PLUSARGS) 2>&1 | tee -i $(SIM_LOG)

sim_dump: VV_OPTS += --trace-fst
sim_dump: VV_OPTS += --trace-structs
sim_dump: VV_OPTS += --trace-depth 15
sim_dump: sim

wave: $(SIM_DIR)/wavesc
$(SIM_DIR)/wavesc:
	$(GTKWAVE) -f $(@D)/dump.fst &

clean_sim:
	rm -rf $(SIM_DIR)

##############
### Global ###
##############

$(LINT_DIR) $(BUILD_DIR) $(SIM_DIR):
	mkdir -p $@

clean: clean_lint clean_build clean_sim

